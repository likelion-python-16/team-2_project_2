name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      # GitHub 리포지토리 체크아웃
      - name: Checkout Repository
        uses: actions/checkout@v2

      # SSH 개인 키 설정
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # StrictHostKeyChecking 비활성화
      - name: Disable StrictHostKeyChecking
        run: |
          mkdir -p ~/.ssh
          echo "Host 3.38.192.206" >> ~/.ssh/config
          echo "    StrictHostKeyChecking no" >> ~/.ssh/config

      # EC2에 파일 업로드
      - name: Upload Files to EC2
        run: |
          # scp 명령어로 필요한 파일들을 EC2 서버에 전송합니다.
          # -i 옵션이 필요 없도록 ssh-agent를 사용합니다.
          # team-2_project_2가 정확한 프로젝트 이름입니다.
          scp .env Dockerfile docker-compose.yml ubuntu@3.38.192.206:~/deploy_test/team-2_project_2/

      # EC2에서 도커 컴포즈 실행
      - name: Run Docker Compose on EC2
        run: |
          # SSH 접속 후, EC2 서버에서 명령어를 실행합니다.
          # 세미콜론(;)을 사용하여 여러 명령어를 순차적으로 실행합니다.
          ssh ubuntu@3.38.192.206 " \
            cd ~/deploy_test/team-2_project_2/; \
            # docker-compose가 설치되어 있지 않다면 설치합니다.
            if ! [ -x "$(command -v docker-compose)" ]; then \
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose; \
              sudo chmod +x /usr/local/bin/docker-compose; \
            fi; \
            # 컨테이너를 빌드하고 실행합니다.
            sudo docker-compose up -d --build \
